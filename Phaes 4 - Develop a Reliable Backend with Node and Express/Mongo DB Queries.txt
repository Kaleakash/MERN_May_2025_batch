Please connect mongo db 
use mearn_2025_batch;
 db.Students.insertMany([
{_id:1,sname:"John",age:21,skillset:["Java","C","C++"]},
{_id:2,sname:"Neena",age:22,skillset:["Python","C","C++"]},
{_id:3,sname:"Raj",age:23,skillset:["HTML","CSS","JavaScript"]},
{_id:4,sname:"Steven",age:24,skillset:["Angular","ReactJS"]}
]);


db.Students.find();

search document details with array value conditions. 
db.Students.find({skillset:"C"});

Adding new value to array fields. 
$push operator we need to use. 

db.Students.updateMany({sname:"John"},{$push:{skillset:"React JS"}});
$addToSet operator we need to use. It add only it not exits. 
db.Students.updateMany({sname:"John"},{$addToSet:{skillset:"React JS"}});
remove particular skillset 
db.Students.updateMany({sname:"John"},{$pull:{skillset:"React JS"}});


Embedded Style relationship 

inside one document we are storing another document 

db.EmployeeInfo.insertOne(
{_id:100,name:"John",age:21,skillset:["Java","Python","React JS"],
address:{city:"Bangalore",state:"Kar"},projects:[{pid:111,tech:"Java"},{pid:222,tech:"Python"},{pid:333,tech:"React JS"}]}
);

db.EmployeeInfo.insertOne(
{_id:101,name:"Raj",age:23,skillset:["C"],
address:{city:"Mumbai",state:"Mh"},projects:[{pid:444,tech:"C"}]}
);

db.EmployeeInfo.insertOne(
{_id:102,name:"Lex",age:24,
address:{city:"Bangalore",state:"Kar"}});

View all documents from EmployeeInfo collection 

db.EmployeeInfo.find();


view specific document with embedded property 

db.EmployeeInfo.find({"address.city":"Bangalore"});



Linking Style 

Trainer 

_id,tname,tech,students:[{},{},{}]

Student 
_id,sname,age,trainer:{}

Trainer Details 
1	Raj		Java			handle Reeta and Meeta 
2	Ravi		Python 		handle Leeta, Veeta
3	John		React Js		not handling any student 

Student Details 
100	Reeta	21			Belong to Raj Trainer 
101	Meeta	22			Belong to Raj Trainer 
102	Leeta		23			Belong to Ravi Trainer 
103	Veeta	24			Belong to Ravi Trainer 
104	Keeta	25			not a part of any batch 



Inside Trainer we can store more than one student details 
Store in Student1 5 documents 

	db.Student1.insertOne({_id:100,sname:"Reeta",age:21});
	db.Student1.insertOne({_id:101,sname:"Meeta",age:22});
db.Student1.insertOne({_id:102,sname:"Leeta",age:23});
db.Student1.insertOne({_id:103,sname:"Veeta",age:24});
db.Student1.insertOne({_id:104,sname:"Keeta",age:25});

View all Student1 details 

db.Student1.find();

db.Trainer1.insertOne({_id:1,tname:"Raj",tech:"Java",students:[db.Student1.findOne({_id:100}),db.Student1.findOne({_id:101})]});
db.Trainer1.insertOne({_id:2,tname:"Ravi",tech:"Python",students:[db.Student1.findOne({_id:102}),db.Student1.findOne({_id:103})]});
db.Trainer1.insertOne({_id:3,tname:"John",tech:"React JS",students:[]})

to View all Trainer1 details 

Inside Student we can store Trainer details. 


db.Trainer2.insertOne({_id:1,tname:"Raj",tech:"Java"})
db.Trainer2.insertOne({_id:2,tname:"Ravi",tech:"Python"})
db.Trainer2.insertOne({_id:3,tname:"John",tech:"React JS"})

View all Trainer2 details 

db.Trainer2.find();


db.Student2.insertOne({_id:100,sname:"Reeta",age:21,trainer:db.Trainer2.findOne({_id:1})});
db.Student2.insertOne({_id:101,sname:"Meeta",age:22,trainer:db.Trainer2.findOne({_id:1})});
db.Student2.insertOne({_id:102,sname:"Leeta",age:23,trainer:db.Trainer2.findOne({_id:2})});
db.Student2.insertOne({_id:103,sname:"Veeta",age:24,trainer:db.Trainer2.findOne({_id:2})});
db.Student2.insertOne({_id:104,sname:"Keeta",age:25});

View all Student2 details documents 

db.Student2.find();


 
Product collection 

db.Products.insertMany([
{_id:1,pname:"TV",category:"Electronics",price:56000,qty:10},
{_id:2,pname:"Laptop",category:"Electronics",price:95000,qty:20},
{_id:3,pname:"Shampo",category:"Health",price:100,qty:50},
{_id:4,pname:"Toothpaste",category:"Health",price:500,qty:25},
{_id:5,pname:"Computer",category:"Electronics",price:35000,qty:50}
]);

view all products collection details 

db.Products.find();


filter the collection base upon category using 
1. find 
2. aggregate 


db.Products.find({category:"Electronics"});

db.Products.aggregate([{$match:{category:"Electronics"}}]);










